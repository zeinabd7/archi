
package service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.swing.*;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "UtilisateurWS", targetNamespace = "http://service/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface UtilisateurWS {


    /**
     * 
     * @param password
     * @param role
     * @param id
     * @param login
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateUtilisateur", targetNamespace = "http://service/", className = "service.UpdateUtilisateur")
    @ResponseWrapper(localName = "updateUtilisateurResponse", targetNamespace = "http://service/", className = "service.UpdateUtilisateurResponse")
    @Action(input = "http://service/UtilisateurWS/updateUtilisateurRequest", output = "http://service/UtilisateurWS/updateUtilisateurResponse")
    public boolean updateUtilisateur(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "login", targetNamespace = "")
        String login,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "role", targetNamespace = "")
        String role);

    /**
     * 
     * @param id
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteUtilisateur", targetNamespace = "http://service/", className = "service.DeleteUtilisateur")
    @ResponseWrapper(localName = "deleteUtilisateurResponse", targetNamespace = "http://service/", className = "service.DeleteUtilisateurResponse")
    @Action(input = "http://service/UtilisateurWS/deleteUtilisateurRequest", output = "http://service/UtilisateurWS/deleteUtilisateurResponse")
    public boolean deleteUtilisateur(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @return
     *     returns java.util.List<service.Utilisateur>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUtilisateur", targetNamespace = "http://service/", className = "service.GetUtilisateur")
    @ResponseWrapper(localName = "getUtilisateurResponse", targetNamespace = "http://service/", className = "service.GetUtilisateurResponse")
    @Action(input = "http://service/UtilisateurWS/getUtilisateurRequest", output = "http://service/UtilisateurWS/getUtilisateurResponse")
    public List<Utilisateur> getUtilisateur();

    /**
     * 
     * @param idUtilisateur
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addToken", targetNamespace = "http://service/", className = "service.AddToken")
    @ResponseWrapper(localName = "addTokenResponse", targetNamespace = "http://service/", className = "service.AddTokenResponse")
    @Action(input = "http://service/UtilisateurWS/addTokenRequest", output = "http://service/UtilisateurWS/addTokenResponse")
    public boolean addToken(
        @WebParam(name = "id_utilisateur", targetNamespace = "")
        int idUtilisateur);

    /**
     * 
     * @param idUtilisateur
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteToken", targetNamespace = "http://service/", className = "service.DeleteToken")
    @ResponseWrapper(localName = "deleteTokenResponse", targetNamespace = "http://service/", className = "service.DeleteTokenResponse")
    @Action(input = "http://service/UtilisateurWS/deleteTokenRequest", output = "http://service/UtilisateurWS/deleteTokenResponse")
    public boolean deleteToken(
        @WebParam(name = "id_utilisateur", targetNamespace = "")
        int idUtilisateur);

    /**
     * 
     * @param categorie
     * @param titre
     * @param dateModification
     * @param id
     * @param contenu
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateArticle", targetNamespace = "http://service/", className = "service.UpdateArticle")
    @ResponseWrapper(localName = "updateArticleResponse", targetNamespace = "http://service/", className = "service.UpdateArticleResponse")
    @Action(input = "http://service/UtilisateurWS/updateArticleRequest", output = "http://service/UtilisateurWS/updateArticleResponse")
    public boolean updateArticle(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "titre", targetNamespace = "")
        String titre,
        @WebParam(name = "contenu", targetNamespace = "")
        String contenu,
        @WebParam(name = "dateModification", targetNamespace = "")
        String dateModification,
        @WebParam(name = "categorie", targetNamespace = "")
        int categorie);

    /**
     * 
     * @param login
     * @param password
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "authentification", targetNamespace = "http://service/", className = "service.Authentification")
    @ResponseWrapper(localName = "authentificationResponse", targetNamespace = "http://service/", className = "service.AuthentificationResponse")
    @Action(input = "http://service/UtilisateurWS/authentificationRequest", output = "http://service/UtilisateurWS/authentificationResponse")
    public String authentification(
        @WebParam(name = "login", targetNamespace = "")
                String login,
        @WebParam(name = "password", targetNamespace = "")
                String password);

    /**
     * 
     * @param id
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteArticle", targetNamespace = "http://service/", className = "service.DeleteArticle")
    @ResponseWrapper(localName = "deleteArticleResponse", targetNamespace = "http://service/", className = "service.DeleteArticleResponse")
    @Action(input = "http://service/UtilisateurWS/deleteArticleRequest", output = "http://service/UtilisateurWS/deleteArticleResponse")
    public boolean deleteArticle(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param password
     * @param role
     * @param login
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addUtilisateur", targetNamespace = "http://service/", className = "service.AddUtilisateur")
    @ResponseWrapper(localName = "addUtilisateurResponse", targetNamespace = "http://service/", className = "service.AddUtilisateurResponse")
    @Action(input = "http://service/UtilisateurWS/addUtilisateurRequest", output = "http://service/UtilisateurWS/addUtilisateurResponse")
    public boolean addUtilisateur(
        @WebParam(name = "login", targetNamespace = "")
        String login,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "role", targetNamespace = "")
        String role);

    /**
     * 
     * @param idUtilisateur
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "verifyToken", targetNamespace = "http://service/", className = "service.VerifyToken")
    @ResponseWrapper(localName = "verifyTokenResponse", targetNamespace = "http://service/", className = "service.VerifyTokenResponse")
    @Action(input = "http://service/UtilisateurWS/verifyTokenRequest", output = "http://service/UtilisateurWS/verifyTokenResponse")
    public String verifyToken(
        @WebParam(name = "id_utilisateur", targetNamespace = "")
        int idUtilisateur);

    /**
     * 
     * @param libelle
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addCategorie", targetNamespace = "http://service/", className = "service.AddCategorie")
    @ResponseWrapper(localName = "addCategorieResponse", targetNamespace = "http://service/", className = "service.AddCategorieResponse")
    @Action(input = "http://service/UtilisateurWS/addCategorieRequest", output = "http://service/UtilisateurWS/addCategorieResponse")
    public boolean addCategorie(
        @WebParam(name = "libelle", targetNamespace = "")
        String libelle);

    /**
     * 
     * @param libelle
     * @param id
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateCategorie", targetNamespace = "http://service/", className = "service.UpdateCategorie")
    @ResponseWrapper(localName = "updateCategorieResponse", targetNamespace = "http://service/", className = "service.UpdateCategorieResponse")
    @Action(input = "http://service/UtilisateurWS/updateCategorieRequest", output = "http://service/UtilisateurWS/updateCategorieResponse")
    public boolean updateCategorie(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "libelle", targetNamespace = "")
        String libelle);

    /**
     * 
     * @param dateCreation
     * @param categorie
     * @param titre
     * @param dateModification
     * @param contenu
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addArticle", targetNamespace = "http://service/", className = "service.AddArticle")
    @ResponseWrapper(localName = "addArticleResponse", targetNamespace = "http://service/", className = "service.AddArticleResponse")
    @Action(input = "http://service/UtilisateurWS/addArticleRequest", output = "http://service/UtilisateurWS/addArticleResponse")
    public boolean addArticle(
        @WebParam(name = "titre", targetNamespace = "")
        String titre,
        @WebParam(name = "contenu", targetNamespace = "")
        String contenu,
        @WebParam(name = "dateCreation", targetNamespace = "")
        String dateCreation,
        @WebParam(name = "dateModification", targetNamespace = "")
        String dateModification,
        @WebParam(name = "categorie", targetNamespace = "")
        int categorie);

    /**
     * 
     * @param id
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteCategorie", targetNamespace = "http://service/", className = "service.DeleteCategorie")
    @ResponseWrapper(localName = "deleteCategorieResponse", targetNamespace = "http://service/", className = "service.DeleteCategorieResponse")
    @Action(input = "http://service/UtilisateurWS/deleteCategorieRequest", output = "http://service/UtilisateurWS/deleteCategorieResponse")
    public boolean deleteCategorie(
        @WebParam(name = "id", targetNamespace = "")
        int id);

}
